<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iss.yzsxy.dao.classs.ClasssMapper" >
  <resultMap id="BaseResultMap" type="com.iss.yzsxy.pojo.classs.Classs" >
    <id column="classId" property="classid" jdbcType="INTEGER" />
    <result column="className" property="classname" jdbcType="VARCHAR" />
    <result column="createUid" property="createuid" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
    <association column="createUid" property="admin" select="com.iss.yzsxy.dao.user.AdminMapper.selectByPrimaryKey"></association>
  </resultMap>

  <sql id="Base_Column_List" >
    classId, className, createUid, isdel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_class
    where classId = #{classid,jdbcType=INTEGER}
  </select>

  <select id="selectClassByClassName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tb_class
    where className = #{classname,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_class
    where classId = #{classid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iss.yzsxy.pojo.classs.Classs" >
    insert into tb_class (classId, className, createUid, 
      isdel)
    values (#{classid,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, #{createuid,jdbcType=INTEGER}, 
      #{isdel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.iss.yzsxy.pojo.classs.Classs" useGeneratedKeys="true" keyProperty="classid">
    insert into tb_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        classId,
      </if>
      <if test="classname != null" >
        className,
      </if>
      <if test="createuid != null" >
        createUid,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="createuid != null" >
        #{createuid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iss.yzsxy.pojo.classs.Classs" >
    update tb_class
    <set >
      <if test="classname != null" >
        className = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="createuid != null" >
        createUid = #{createuid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where classId = #{classid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iss.yzsxy.pojo.classs.Classs" >
    update tb_class
    set className = #{classname,jdbcType=VARCHAR},
      createUid = #{createuid,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER}
    where classId = #{classid,jdbcType=INTEGER}
  </update>


  <!--获取列表-->
  <select id="selectClassList" parameterType="com.iss.yzsxy.pojo.teacher.TeacherPojo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    tb_class e
    WHERE
    isdel = 0
    <if test="className!=null">
      AND e.className LIKE #{className,jdbcType=VARCHAR}
    </if>
  </select>

  <!--批量删除-->
  <update id="deleteBatch"  >
    update tb_class
    set
    isdel = 1
    where classId IN
    <foreach collection="ids" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="classid">
    INSERT INTO tb_class(className,createUid) VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.classname},#{item.createuid})
    </foreach>
  </insert>


</mapper>